stages:
  - test
  - build

test-backend:
  stage: test
  image: python:3.11
  before_script:
    - cd backend
    - pip install -r requirements.txt
  script:
    - pytest --cov=. --cov-report=xml:coverage.xml
  only:
    - main
    - develop
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml
    paths:
      - backend/htmlcov
    expire_in: 1 week

build-frontend:
  variables:
    DOCKER_IMAGE_BASE: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
  script:
    - |
      docker buildx build --push \
        --platform linux/amd64 \
        -t "${DOCKER_IMAGE_BASE}-amd64" \
        ./frontend
      docker buildx build --push \
        --platform linux/arm64 \
        -t "${DOCKER_IMAGE_BASE}-arm64" \
        ./frontend
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker buildx build --push \
          --platform linux/amd64 \
          -t "$CI_REGISTRY_IMAGE/frontend:latest-amd64" \
          ./frontend
        docker buildx build --push \
          --platform linux/arm64 \
          -t "$CI_REGISTRY_IMAGE/frontend:latest-arm64" \
          ./frontend
      fi
  only:
    - main
    - develop

build-backend:
  variables:
    DOCKER_IMAGE_BASE: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
  script:
    - |
      docker buildx build --push \
        --platform linux/amd64 \
        -t "${DOCKER_IMAGE_BASE}-amd64" \
        ./backend
      docker buildx build --push \
        --platform linux/arm64 \
        -t "${DOCKER_IMAGE_BASE}-arm64" \
        ./backend
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker buildx build --push \
          --platform linux/amd64 \
          -t "$CI_REGISTRY_IMAGE/backend:latest-amd64" \
          ./backend
        docker buildx build --push \
          --platform linux/arm64 \
          -t "$CI_REGISTRY_IMAGE/backend:latest-arm64" \
          ./backend
      fi
  only:
    - main
    - develop