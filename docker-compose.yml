services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - DOCUMENT_STORAGE_PATH=/app/storage
      - ACCESS_TOKEN_EXPIRE_MINUTES=600
      - TESSERACT_PATH=/usr/bin/tesseract
      - LIBREOFFICE_PATH=/usr/bin/libreoffice
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - OLLAMA_LLM_MODEL=${OLLAMA_LLM_MODEL}
      - OLLAMA_EMBEDDING_MODEL=${OLLAMA_EMBEDDING_MODEL}
      - OLLAMA_TIMEOUT=${OLLAMA_TIMEOUT}
      - NEO4J_URL=${NEO4J_URL}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    ports:
      - "8000:8000"
    volumes:
      - ./data/document-storage:/app/storage
      - ./data/tmp-storage:/app/tmp
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 99999
      start_period: 3s
    depends_on:
      neo4j-db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  neo4j-db:
    container_name: neo4j-db
    image: neo4j:5.26.5
    environment: # default username is "neo4j"
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # API access
    volumes:
      - ./data/neo4j:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 3s
    restart: unless-stopped

  ollama:
    image: ollama/ollama:0.6.5
    ports:
      - 11434:11434
    environment:
      - OLLAMA_CONTEXT_LENGTH=8192
      - OLLAMA_KEEP_ALIVE=30m
    volumes:
      - ./data/ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]

volumes:
  db-storage:
