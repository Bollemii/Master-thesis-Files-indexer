services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DOCUMENT_STORAGE_PATH=/app/storage
      - TESSERACT_PATH=/usr/bin/tesseract
      - LIBREOFFICE_PATH=/usr/bin/libreoffice
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - OLLAMA_TIMEOUT=50
      - NEO4J_URL=${NEO4J_URL}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    ports:
      - "8000:8000"
    volumes:
      - ./data/document-storage:/app/storage
      - ./data/tmp-storage:/app/tmp
    depends_on:
      neo4j-db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-storage:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  neo4j-db:
    container_name: neo4j-db
    image: neo4j:5.26.5
    environment: # default username is "neo4j"
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # API access
    volumes:
      - ./data/neo4j:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 3s
    restart: unless-stopped

  ollama:
    image: ollama/ollama:0.6.5
    ports:
      - 11434:11434
    volumes:
      - ./data/ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]

volumes:
  db-storage:
