services:
  backend:
    build:
      context: ./backend
    container_name: backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DOCUMENT_STORAGE_PATH=${DOCUMENT_STORAGE_PATH}
    ports:
      - "8000:8000"
    volumes:
      - document-storage:${DOCUMENT_STORAGE_PATH}
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    container_name: frontend
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - db-storage:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PW}
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  document-storage:
  db-storage:
